- name: Discover and Add Fortigate device
  hosts: fortimanagers
  gather_facts: no
  connection: httpapi

  vars:
    ansible_httpapi_use_ssl: True
    ansible_httpapi_validate_certs: False
    ansible_httpapi_port: 443
    device_ip: 18.134.18.23
    device_user: admin
    device_password: mohsin@642#
    adom: root
  tasks:
    - name: discover device
      fmgr_dvm_cmd_discover_device:
         method: exec
         params:
            - data:
                device:
                   adm_pass: "{{ device_password }}"
                   adm_usr: "{{ device_user }}"
                   ip: "{{ device_ip }}"
      register: probed_device

    - name: Print version
      debug:
        msg: "{{ probed_device }}"

    - name: add device
      fmgr_dvm_cmd_add_device:
        loose_validation: true
        method: exec
        params:
            - data:
                adom: '{{ adom }}'
                device:
                    adm_pass: "{{ probed_device.meta.data.device.adm_pass }}"
                    adm_usr: "{{ probed_device.meta.data.device.adm_usr }}"
                    desc: "The device is added via Ansible"
                    ip: "{{ probed_device.meta.data.device.ip }}"
                    mgmt_mode: "fmg"
                    name: "{{ probed_device.meta.data.device.name }}"
                    sn: "{{ probed_device.meta.data.device.sn }}"
                flags:
                    - create_task
                    - nonblocking
      register: installing_task

    - name: query long-term task status
      fmgr_task_task_obj:
        method: get
        url_params:
            task: "{{ installing_task.meta.data.taskid }}"
      register: taskinfo
      until: taskinfo.meta.data.percent == 100
      retries: 30
      delay: 10

    - name: detect errors in previous task
      fail:
        msg: 'the device is not installed correctly'
      failed_when: taskinfo.meta.data.state == 'error' and 'devsnexist' not in taskinfo.meta.data.line[0].detail

    - name: Import objects from device to ADOM, or from ADOM to Global.
      fmgr_securityconsole_import_dev_objs:
         bypass_validation: False
         workspace_locking_adom: "{{ adom }}"
         workspace_locking_timeout: 300
         securityconsole_import_dev_objs:
            add_mappings: enable
            adom: "{{ adom }}"
            dst_name: "{{ probed_device.meta.data.device.name }}"
            dst_parent: "{{ adom }}"
            if_all_objs: all
            if_all_policy: enable
            import_action: do
            name: "{{ probed_device.meta.data.device.name }}"
            position: top
            vdom: "{{ adom }}"

